{"version":3,"sources":["reducers/bookReducer.jsx","contexts/booksContext.jsx","reducers/themeReducer.jsx","contexts/themeContext.jsx","components/toggleThemeBtn.jsx","components/navbar.jsx","components/bookItem.jsx","components/bookList.jsx","components/newBookForm.jsx","App.js","index.js"],"names":["bookReducer","state","action","type","title","bookPayload","author","id","uuid","filter","book","BooksContext","createContext","BooksContextProvider","props","useReducer","localStorageData","localStorage","getItem","JSON","parse","books","dispatch","useEffect","setItem","stringify","Provider","value","children","themeReducer","isThemeLight","light","ui","bg","textColor","dark","ThemeContext","ThemeContextProvider","theme","ToggleThemeBtn","useContext","themeData","className","onClick","style","background","color","Navbar","length","BookItem","bookDitails","BookList","map","NewBookForm","useState","setTitle","setAuthor","onSubmit","e","preventDefault","placeholder","onChange","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c8769d2.chunk.js","sourcesContent":["import uuid from \"react-uuid\";\r\nexport const bookReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_book\":\r\n      return [\r\n        ...state,\r\n        {\r\n          title: action.bookPayload.title,\r\n          author: action.bookPayload.author,\r\n          id: uuid(),\r\n        },\r\n      ];\r\n    case \"DEL_BOOK\":\r\n      return state.filter((book) => book.id !== action.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport { bookReducer } from \"../reducers/bookReducer\";\r\n\r\nexport const BooksContext = createContext();\r\n\r\nconst BooksContextProvider = (props) => {\r\n  const [books, dispatch] = useReducer(bookReducer, [], () => {\r\n    const localStorageData = localStorage.getItem(\"books\");\r\n    return localStorageData ? JSON.parse(localStorageData) : [];\r\n  });\r\n  useEffect(() => {\r\n    localStorage.setItem(\"books\", JSON.stringify(books));\r\n    //console.log(localStorage.getItem(\"books\"));\r\n  }, [books]);\r\n  return (\r\n    <BooksContext.Provider value={{ books, dispatch }}>\r\n      {props.children}\r\n    </BooksContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BooksContextProvider;\r\n","export const themeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_THEME\":\r\n      return {\r\n        isThemeLight: !state.isThemeLight,\r\n        light: { ui: \"#d5d5d5\", bg: \"#ececec\", textColor: \"#010101\" },\r\n        dark: { ui: \"#000\", bg: \"#333\", textColor: \"#fff\" },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useState, useReducer } from \"react\";\r\nimport { themeReducer } from \"../reducers/themeReducer\";\r\nexport const ThemeContext = createContext();\r\nconst ThemeContextProvider = (props) => {\r\n  const [theme, dispatch] = useReducer(themeReducer, {\r\n    isThemeLight: true,\r\n    light: { ui: \"#d5d5d5\", bg: \"#ececec\", textColor: \"#010101\" },\r\n    dark: { ui: \"#000\", bg: \"#333\", textColor: \"#fff\" },\r\n  });\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, dispatch }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"./../contexts/themeContext\";\r\nconst ToggleThemeBtn = () => {\r\n  const { theme, dispatch } = useContext(ThemeContext);\r\n  const { isThemeLight, light, dark } = theme;\r\n  const themeData = isThemeLight ? light : dark;\r\n  return (\r\n    <button\r\n      className=\"toggle-theme\"\r\n      onClick={() => dispatch({ type: \"CHANGE_THEME\" })}\r\n      style={{ background: themeData.bg, color: themeData.textColor }}\r\n    >\r\n      Toggle Theme\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ToggleThemeBtn;\r\n","import React, { useContext } from \"react\";\r\nimport { BooksContext } from \"../contexts/booksContext\";\r\nimport { ThemeContext } from \"./../contexts/themeContext\";\r\nimport ToggleThemeBtn from \"./toggleThemeBtn\";\r\n\r\nconst Navbar = () => {\r\n  const { books } = useContext(BooksContext);\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isThemeLight, light, dark } = theme;\r\n  const themeData = isThemeLight ? light : dark;\r\n  return (\r\n    <div className=\"navbar\" style={{ background: themeData.ui }}>\r\n      <h1>Ninja Reading List</h1>\r\n      <p>Currently you have {books.length} books to get through...</p>\r\n      <ToggleThemeBtn />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from \"react\";\r\nimport { BooksContext } from \"../contexts/booksContext\";\r\nimport { ThemeContext } from \"./../contexts/themeContext\";\r\nconst BookItem = (props) => {\r\n  const { dispatch } = useContext(BooksContext);\r\n  const { bookDitails } = props;\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isThemeLight, light, dark } = theme;\r\n  const themeData = isThemeLight ? light : dark;\r\n  return (\r\n    <li\r\n      style={{ background: themeData.ui, color: themeData.textColor }}\r\n      onClick={() => dispatch({ type: \"DEL_BOOK\", id: bookDitails.id })}\r\n    >\r\n      <div className=\"title\" style={{ color: themeData.textColor }}>\r\n        {bookDitails.title}\r\n      </div>\r\n      <div className=\"author\" style={{ color: themeData.textColor }}>\r\n        {bookDitails.author}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default BookItem;\r\n","import React, { useContext } from \"react\";\r\nimport { BooksContext } from \"../contexts/booksContext\";\r\nimport BookItem from \"./bookItem\";\r\nconst BookList = () => {\r\n  const { books } = useContext(BooksContext);\r\n  return books.length ? (\r\n    <div className=\"book-list\">\r\n      <ul>\r\n        {books.map((book) => {\r\n          return <BookItem key={book.id} bookDitails={book} />;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  ) : (\r\n    <div className=\"empty\">No Books</div>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { BooksContext } from \"../contexts/booksContext\";\r\nimport { ThemeContext } from \"./../contexts/themeContext\";\r\nconst NewBookForm = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const { dispatch } = useContext(BooksContext);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"ADD_book\", bookPayload: { title, author } });\r\n    setTitle(\"\");\r\n    setAuthor(\"\");\r\n  };\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isThemeLight, light, dark } = theme;\r\n  const themeData = isThemeLight ? light : dark;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        placeholder=\"book title\"\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        style={{ background: themeData.ui, color: themeData.textColor }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={author}\r\n        placeholder=\"author name\"\r\n        onChange={(e) => setAuthor(e.target.value)}\r\n        style={{ background: themeData.ui, color: themeData.textColor }}\r\n      />\r\n      <input\r\n        type=\"submit\"\r\n        value=\"add book\"\r\n        style={{ background: themeData.ui, color: themeData.textColor }}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewBookForm;\r\n","import React, { useContext } from \"react\";\r\nimport Navbar from \"./components/navbar\";\r\nimport BookList from \"./components/bookList\";\r\nimport NewBookForm from \"./components/newBookForm\";\r\nimport BooksContextProvider from \"./contexts/booksContext\";\r\nimport { ThemeContext } from \"./contexts/themeContext\";\r\n\r\nfunction App() {\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isThemeLight, light, dark } = theme;\r\n  const themeData = isThemeLight ? light : dark;\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      style={{ background: themeData.bg, color: themeData.textColor }}\r\n    >\r\n      <BooksContextProvider>\r\n        <Navbar />\r\n        <BookList />\r\n        <NewBookForm />\r\n      </BooksContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport ThemeContextProvider from \"./contexts/themeContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeContextProvider>\r\n      <App />\r\n    </ThemeContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}